from aiogram import types
import replicas.replicas_main_bot as replicas


def create_start_markup():
    kb = [
        [types.KeyboardButton(text=replicas.create_character)],
        [types.KeyboardButton(text=replicas.my_character)]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


def create_markup_start_stop_bot(status, bot_id):
    if status == "–∑–∞–ø—É—â–µ–Ω":
        kb = [
            [types.InlineKeyboardButton(text="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data=f"stop_bot_{bot_id}")],
        ]
    else:
        kb = [
            [types.InlineKeyboardButton(text="–ó–∞–ø—É—Å—Ç–∏—Ç—å", callback_data=f"start_bot_{bot_id}")],
        ]
    kb.append([types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç", callback_data=f"edit_prompt_{bot_id}")])
    kb.append([types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω yoomoney", callback_data=f"edit_yoomoney_token_{bot_id}")])
    kb.append([types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å", callback_data=f"edit_voice_{bot_id}")],)
    kb.append([types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –∑–∞ –æ–¥–Ω—É –º–∏–Ω—É—Ç—É", callback_data=f"edit_price_per_minute_{bot_id}")],)
    kb.append([types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data=f"edit_start_message_{bot_id}")],)
    kb.append([types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã", callback_data=f"edit_main_rates_{bot_id}")],)
    kb.append([types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–µ—Ç–∫–∏", callback_data=f"edit_marks_{bot_id}")],)
    kb.append([types.InlineKeyboardButton(text="–ü—Ä–æ–º–æ–∫–æ–¥—ã", callback_data=f"promocodes_{bot_id}")],)
    kb.append([types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞", callback_data=f"mailing_{bot_id}")],)
    kb.append([types.InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"statistics_{bot_id}")],)
    kb.append([types.InlineKeyboardButton(text="–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã", callback_data=f"manual_pay_{bot_id}")],)
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_cancel_markup():
    kb = [
        [types.KeyboardButton(text=replicas.cancel)]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


def create_markup_rates(bot_id):
    kb = [
        [types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Ç–∞—Ä–∏—Ñ ‚ûï", callback_data=f"add_rate_{bot_id}")],
        [types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ç–∞—Ä–∏—Ñ ‚ûñ", callback_data=f"delete_rates_{bot_id}")],
        [types.InlineKeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–∞—Ä–∏—Ñ", callback_data=f"edit_rates_{bot_id}")],
        [types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏–ª! –î–∞–≤–∞–π –¥–∞–ª—å—à–µ ‚è©", callback_data=f"next_settings_rate")],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_delete_rate(rates):
    kb = []
    for rate in rates:
        kb.append([types.InlineKeyboardButton(text=f"{rate[2]} –º–∏–Ω—É—Ç - {rate[3]}‚ÇΩ", callback_data=f"delete_rate_{rate[0]}")])
    kb.append([types.InlineKeyboardButton(text=f"–ù–∞–∑–∞–¥ ‚è™", callback_data=f"rate_back")])
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_edit_rate(rates):
    kb = []
    for rate in rates:
        kb.append([types.InlineKeyboardButton(text=f"{rate[2]} –º–∏–Ω—É—Ç - {rate[3]}‚ÇΩ", callback_data=f"edit_rate_{rate[0]}")])
    kb.append([types.InlineKeyboardButton(text=f"–ù–∞–∑–∞–¥ ‚è™", callback_data=f"rate_back")])
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_rate_back():
    kb = [[types.InlineKeyboardButton(text=f"–ù–∞–∑–∞–¥ ‚è™", callback_data=f"rate_back")]]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_add_start_photo():
    kb = [[types.InlineKeyboardButton(text=f"–î–∞, –¥–æ–±–∞–≤–ª—è–µ–º!", callback_data=f"add_photo")],
          [types.InlineKeyboardButton(text=f"–ù–µ—Ç, –∏–¥–µ–º –¥–∞–ª—å—à–µ ‚è©", callback_data=f"skip_add_photo")]]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_edit_start_photo():
    kb = [[types.InlineKeyboardButton(text=f"–î–∞, –¥–æ–±–∞–≤–ª—è–µ–º!", callback_data=f"edit_photo")],
          [types.InlineKeyboardButton(text=f"–ù–µ—Ç, –∏–¥–µ–º –¥–∞–ª—å—à–µ ‚è© / –°–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Ñ–æ—Ç–æ", callback_data=f"skip_edit_photo")]]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_choice_marks(bot_id, marks):
    kb = []
    for mark in marks:
        kb.append([types.InlineKeyboardButton(text=mark[2], callback_data=f"mark_{mark[0]}_{bot_id}")])
    kb.append([types.InlineKeyboardButton(text=f"–¢–∞–±–ª–∏—Ü–∞ –º–µ—Ç–æ–∫", callback_data=f"table_marks_{bot_id}")])
    kb.append([types.InlineKeyboardButton(text=f"üîô –ù–∞–∑–∞–¥", callback_data=f"back_to_settings_{bot_id}"),
               types.InlineKeyboardButton(text=f"‚ûï –°–æ–∑–¥–∞—Ç—å –º–µ—Ç–∫—É", callback_data=f"create_mark_{bot_id}")])
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_mark(mark_id, bot_id):
    kb = [[types.InlineKeyboardButton(text=f"–¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data=f"table_users_mark_{mark_id}")],
          [types.InlineKeyboardButton(text=f"üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_mark_{mark_id}_{bot_id}")],
          [types.InlineKeyboardButton(text=f"üîô –ù–∞–∑–∞–¥", callback_data=f"back_to_mark_settings_{bot_id}")]
          ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_promocodes(promocodes, bot_id):
    kb = []
    for promocode in promocodes:
        kb.append([types.InlineKeyboardButton(text=promocode[2], callback_data=f"promocode_{bot_id}_{promocode[0]}")])
    kb.append([types.InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data=f"add_promocode_{bot_id}")])
    kb.append([types.InlineKeyboardButton(text=f"üîô –ù–∞–∑–∞–¥", callback_data=f"back_to_settings_{bot_id}")])
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_promocode(bot_id, promo_id):
    kb = [
        [types.InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π", callback_data=f"edit_promo_total_{promo_id}_{bot_id}")],
        [types.InlineKeyboardButton(text=f"‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞", callback_data=f"edit_promo_person_{promo_id}_{bot_id}")],
        [types.InlineKeyboardButton(text=f"‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞", callback_data=f"edit_promo_date_{promo_id}_{bot_id}")],
        [types.InlineKeyboardButton(text=f"–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–π", callback_data=f"promo_statistics_{promo_id}")],
        [types.InlineKeyboardButton(text=f"üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_promo_{promo_id}_{bot_id}")],
        [types.InlineKeyboardButton(text=f"üîô –ù–∞–∑–∞–¥", callback_data=f"back_to_promocodes_{bot_id}")]
        ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_mailing():
    kb = [
        [types.KeyboardButton(text=replicas.show_message)],
        [types.KeyboardButton(text=replicas.cancel_mailing), types.KeyboardButton(text=replicas.send)]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


# def create_markup_mailing_photo():
#     kb = [
#         [types.KeyboardButton(text=replicas.end_add_photo)],
#     ]
#     keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
#     return keyboard


def create_markup_mailing_type():
    kb = [
        [types.KeyboardButton(text=replicas.mailing_all)],
        [types.KeyboardButton(text=replicas.mailing_without_subscribe)],
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    return keyboard


def create_markup_manual_pay(bot_id, pay_types):
    kb = []
    for pay_type in pay_types:
        kb.append([types.InlineKeyboardButton(text=pay_type[2], callback_data=f"manual_type_{pay_type[0]}")])
    kb.append([types.InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", callback_data=f"add_manual_type_{bot_id}")])
    kb.append([types.InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"statistics_manual_type_{bot_id}")])
    kb.append([types.InlineKeyboardButton(text=f"üîô –ù–∞–∑–∞–¥", callback_data=f"back_to_settings_{bot_id}")])
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_edit_manual_pay_type(pay_type_id, bot_id, is_enable):
    kb = [
        [types.InlineKeyboardButton(text="‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"change_name_pay_type_{pay_type_id}"),
         types.InlineKeyboardButton(text=f"‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"change_description_pay_type_{pay_type_id}")],
        [types.InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å" if is_enable == 1 else "–í–∫–ª—é—á–∏—Ç—å", callback_data=f"disable_pay_type_{pay_type_id}"),
         types.InlineKeyboardButton(text=f"üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_pay_{bot_id}_{pay_type_id}")],
        [types.InlineKeyboardButton(text=f"üîô –ù–∞–∑–∞–¥", callback_data=f"back_to_manual_pay_{bot_id}")]
        ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def create_markup_feedback(message_id, user_id, bot_id):
    kb = [
        [types.InlineKeyboardButton(text="‚úâÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"answer_feedback_{message_id}")],
         [types.InlineKeyboardButton(text=f"üî® –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"ban_{user_id}_{bot_id}")]
        ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard
